INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (1, 'A problem description involving mathematical operations', 'LEVEL1', 'No restrictions', 'Mathematical Operations', 'Input: 5 + 3 * 2, Output: 11');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (2, 'A problem about finding the sum of elements in an array', 'LEVEL1', 'No restrictions', 'Array Sum', 'Input: [1, 2, 3, 4, 5], Output: 15');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (3, 'A problem about checking if a number is prime or not', 'LEVEL2', 'Input should be a positive integer', 'Prime Number Checker', 'Input: 7, Output: true');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (4, 'A problem about calculating the area of a triangle', 'LEVEL1', 'No restrictions', 'Triangle Area Calculator', 'Input: base = 5, height = 8, Output: 20');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (5, 'A problem about reversing a linked list', 'LEVEL3', 'Input list should not be empty', 'Linked List Reversal', 'Input: 1->2->3->4->5, Output: 5->4->3->2->1');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (6, 'A problem about finding the longest word in a sentence', 'LEVEL1', 'No restrictions', 'Longest Word Finder', 'Input: "The quick brown fox", Output: "quick"');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (7, 'A problem about calculating the square root of a number', 'LEVEL2', 'Input should be a non-negative integer', 'Square Root Calculator', 'Input: 16, Output: 4');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (8, 'A problem about finding the median of a list of numbers', 'LEVEL3', 'Input list should not be empty', 'Median Finder', 'Input: [3, 1, 7, 2, 8], Output: 3');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (9, 'A problem about checking if two strings are anagrams', 'LEVEL2', 'No restrictions', 'Anagram Checker', 'Input: "listen", "silent", Output: true');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (10, 'A problem about finding the factorial of a number recursively', 'LEVEL3', 'Input should be a non-negative integer', 'Recursive Factorial Calculator', 'Input: 5, Output: 120');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (11, 'A problem about finding the longest common prefix in an array of strings', 'LEVEL2', 'Input array should not be empty', 'Longest Common Prefix Finder', 'Input: ["flower", "flow", "flight"], Output: "fl"');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (12, 'A problem about checking if a string is a palindrome or not', 'LEVEL1', 'No restrictions', 'Palindrome Checker', 'Input: "racecar", Output: true');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (13, 'A problem about finding the maximum profit from buying and selling stocks', 'LEVEL2', 'Input list should not be empty', 'Stock Profit Calculator', 'Input: [7, 1, 5, 3, 6, 4], Output: 5');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (14, 'A problem about converting a decimal number to binary', 'LEVEL1', 'Input should be a non-negative integer', 'Decimal to Binary Converter', 'Input: 10, Output: 1010');
INSERT INTO PROBLEM (PROBLEM_ID, DESCRIPTION, PROBLEM_RANK, RESTRICTION, TITLE, INPUT_OUTPUT_EXAMPLE) VALUES (15, 'A problem about counting the number of vowels in a string', 'LEVEL2', 'No restrictions', 'Vowel Counter', 'Input: "hello world", Output: 3');

INSERT INTO PROBLEM_FORMAT (PROBLEM_ID, PROBLEM_STANDARD_FORMAT_ID, LANGUAGE, CODE) VALUES (1, 1, 'JAVA', 'public class Solution {\n   public static String solution(String input) {\n return input;\n    }\n}');
INSERT INTO PROBLEM_FORMAT (PROBLEM_ID, PROBLEM_STANDARD_FORMAT_ID, LANGUAGE, CODE) VALUES (1, 2, 'PYTHON', 'def solution(input):\n    answer = ""\n    return answer');

INSERT INTO PROBLEM_TEST_CASE (PROBLEM_TEST_CASE_ID, INPUT, OUTPUT, PROBLEM_ID) VALUES (1, 'apple', 'elppa', 1);
INSERT INTO PROBLEM_TEST_CASE (PROBLEM_TEST_CASE_ID, INPUT, OUTPUT, PROBLEM_ID) VALUES (2, 'banana', 'ananab', 1);
INSERT INTO PROBLEM_TEST_CASE (PROBLEM_TEST_CASE_ID, INPUT, OUTPUT, PROBLEM_ID) VALUES (3, 'hello', 'olleh', 1);

